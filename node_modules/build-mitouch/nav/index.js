var currentFilePath, popup, viewPort, isInit, touch;

exports.onenter = function(callback){
	window.addEventListener("load", callback);
};

exports.onleave = function(callback){
	window.addEventListener('unload', callback);
};

exports.goto = function(options){
	var structure = require('structure');

	if(!options.chapter){
		throw new Error("Chapter is required");
	}

	if(!options.slide){
		options.slide = structure.chapters[options.chapter].content[0];
	}

	goto(options);
};

exports.previousSlide = gotoAdjacent.bind(null, -1);
exports.nextSlide = gotoAdjacent.bind(null, 1);

function gotoAdjacent(direction){
	var sid = require('slide').sid,
		chapter = require('chapter').localViewChapter,
		index = chapter.content.indexOf(sid) + direction,
		slide = chapter.content[index];

	if(slide){
		goto({chapter: chapter.id, slide: slide});
	}
}

function goto(options){
	var settings = require('settings');

	if(window.parent.navigateToSequence){
		window.parent.navigateToSequence((settings.mitouchPrefix ? settings.mitouchPrefix + '_' : '') + options.slide);
	}
}

exports.openDocument = function(path){
	var touchName = 'touch';
	touch = require(touchName);
	openPdf(path);
};

function appendStyles(callback){
	var link = document.createElement("link");

	link.rel = "stylesheet";
	link.href = "pdf.css";

	link.onload = function(){
		callback();
	};

	document.head.appendChild(link);
}

function getPdf(filePath){
	if(filePath){
		try{
			if(currentFilePath !== filePath){
				currentFilePath = filePath;
				if(window.parent.getPDF){
					openPdfPopup(window.parent.getPDF(filePath, window));
				}
			}else{
				openPdfPopup();
			}
		}catch(e){
		}
	}
}

function openPdf(filePath){
	if(filePath){
		try{
			if(window.parent.PDFHelper.OpenPDF){
				window.parent.PDFHelper.OpenPDF(filePath, window, true);
			}else{
				getPdf(filePath);
			}
		}catch(e){
		}
	}
}

function initPopup(callback){
	var closeButton;
	if(!isInit){
		appendStyles(function(){
			isInit = true;
			viewPort = document.getElementsByClassName('slide')[0];
			popup = document.createElement('div');
			popup.id = 'pdfPopup';
			closeButton = document.createElement('button');
			closeButton.className = 'close-pdf-popup';
			closeButton.addEventListener(touch.events.start, closePdfPopup);
			popup.appendChild(closeButton);
			viewPort.appendChild(popup);
			callback();
		});
	}else{
		callback();
	}
}

function openPdfPopup(pdfEmbed){
	var oldEmbed;
	initPopup(function(){
		if(pdfEmbed){
			oldEmbed = popup.getElementsByClassName('pdf-embed')[0];
			if(oldEmbed){
				popup.removeChild(oldEmbed);
			}
			pdfEmbed.style.width = '1024px';
			pdfEmbed.style.height = '768px';
			pdfEmbed.className = 'pdf-embed';
			popup.appendChild(pdfEmbed);
		}
		setTimeout(function(){
			popup.classList.add('active');
		}, 0);
	});
}

function closePdfPopup(){
	if(popup){
		popup.classList.remove('active');
	}
}